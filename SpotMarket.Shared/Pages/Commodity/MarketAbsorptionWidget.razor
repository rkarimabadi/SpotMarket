@inject ICommodityService CommodityService
@if (data != null)
{
    <div class="widget-container">
        <div class="excitement-widget">
            <div class="excitement-chart">
                <svg width="100" height="100" viewBox="0 0 36 36">
                    <circle cx="18" cy="18" r="15.915" fill="none" class="chart-bg" stroke-width="4"></circle>
                    <circle cx="18" cy="18" r="15.915" fill="none" class="chart-fg @GetColorClassForPercentage(data.Percentage)" stroke-width="4" stroke-dasharray="@data.Percentage, 100" stroke-linecap="round"></circle>
                </svg>
                <div class="excitement-chart-center-text">
                    <div class="value">@data.Percentage%</div>
                    <div class="label">@data.Label</div>
                </div>
            </div>
            <div class="excitement-info">
                <h4 class="title">@data.Title</h4>
                <p class="subtitle">@data.Description</p>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CommodityId { get; set; }
    private MarketAbsorptionData? data;
    protected override async Task OnInitializedAsync()
    {
        data = await CommodityService.GetMarketAbsorptionAsync(CommodityId);
    }

    private string GetColorClassForPercentage(int percentage)
    {
        if (percentage >= 95) return "high-absorption";
        if (percentage > 50) return "medium-absorption";
        return "low-absorption";
    }

    private MarketAbsorptionData? highAbsorptionData;
    private MarketAbsorptionData? mediumAbsorptionData;
    private MarketAbsorptionData? lowAbsorptionData;
}
