@using System.Globalization
@inject NavigationManager NavManager
@inject IBrokerService BrokerService

@if (data is not null && data.ByVolume != null && data.ByValue != null && data.ByCount != null)
{
    <div class="top-suppliers-widget">
        <div class="widget-header">
            <h3 class="widget-title">@Title</h3>
        </div>

        <div class="segmented-control">
            <button class="@(selectedTab == "value" ? "active" : "")" @onclick='() => selectedTab = "value"'>بر اساس ارزش</button>
            <button class="@(selectedTab == "volume" ? "active" : "")" @onclick='() => selectedTab = "volume"'>بر اساس حجم</button>
            <button class="@(selectedTab == "count" ? "active" : "")" @onclick='() => selectedTab = "count"'>بر اساس تعداد</button>
        </div>

        <div class="chart-content">
            @{
                var itemsToShow = selectedTab switch
                {
                    "volume" => data.ByVolume,
                    "count" => data.ByCount,
                    _ => data.ByValue
                };
                var maxVal = itemsToShow.Any() ? itemsToShow.Max(i => i.Value) : 1;
            }

            @if (itemsToShow.Any())
            {
                <div class="bar-chart-list">
                    @foreach (var item in itemsToShow)
                    {
                        <div class="chart-row" @onclick="() => GoToSupplier(item)">
                            <div class="row-label">
                                <span class="supplier-name">@item.SupplierName</span>
                                <span class="supplier-value">@item.DisplayValue</span>
                            </div>
                            <div class="row-bar-container">
                                <div class="bar" style="width: @((item.Value / maxVal * 100).ToString(CultureInfo.InvariantCulture))%;"></div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public string Title { get; set; } = "بزرگترین عرضه‌کنندگان";

    [Parameter] public int BrokerId { get; set; }
    private TopSuppliersData? data;
    protected override async Task OnInitializedAsync()
    {
        data = await BrokerService.GetTopSuppliersAsync(BrokerId);
    }
    private string selectedTab = "value";
    private void GoToSupplier(SupplierPerformanceItem item)
    {
        if (item.SupplierId > 0)
        {
            NavManager.NavigateTo($"/players/suppliers/{item.SupplierId}");
        }
    }
}
