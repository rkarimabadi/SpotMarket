@using SpotMarket.Shared.Services.Presentation
@using SpotMarket.Shared.Models.Presentation
@inject ITradingMarketInfoService HallService

@if (_data != null)
{
    <div class="trading-hall-header-container">
        <div class="header-icon">
            <i class="bi bi-shop"></i>
        </div>
        <div class="header-info">
            <h1 class="header-title">@_data.Title</h1>
            <h2 class="header-subtitle">@_data.Subtitle</h2>
        </div>
    </div>
}

@code {
    [Parameter] public int MarketId { get; set; }
    [Parameter] public EventCallback<TradingHallHeaderData> OnDataReceived { get; set; }
    private TradingHallHeaderData? _data;

    protected override async Task OnInitializedAsync()
    {
        _data = await HallService.GetHeaderDataAsync(MarketId);
        await OnDataReceived.InvokeAsync(_data);
    }
}
