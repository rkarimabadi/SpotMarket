@inject ITradingMarketInfoService TradingMarketInfoService

@if (_offers == null)
{
    <div class="loading-indicator">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p>در حال بارگذاری عرضه‌های ناموفق...</p>
    </div>
}
else if (_offers.Count == 0)
{
    <div class="empty-state">
        <i class="bi bi-info-circle"></i>
        <span>هیچ معامله ناموفقی برای امروز ثبت نشده است.</span>
    </div>
}
else
{
    <div class="offer-list">
        @foreach (var offer in _offers)
        {
            <OfferListItemCard Offer="offer" />
        }
    </div>
}

@code {
    [Parameter]
    public int MarketId { get; set; }

    private List<OfferListItem>? _offers;

    protected override async Task OnInitializedAsync()
    {
        if (MarketId > 0)
        {
            _offers = await TradingMarketInfoService.GetFailedOffersAsync(MarketId);
        }
    }
}
