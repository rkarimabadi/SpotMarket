@using System.Globalization
@inject ISupplierService SupplierService
@if (data != null)
{
    <div class="widget-container">
        <div class="competition-widget">
            <div class="competition-radial-gauge">
                <div class="gauge-graphic">
                    <svg viewBox="0 0 100 56">
                        <path d="M 10 50 A 40 40 0 0 1 90 50" class="gauge-background" />
                        <path d="M 10 50 A 40 40 0 0 1 90 50" class="gauge-value" style="stroke-dashoffset: @CalculateStrokeOffset();" />
                    </svg>
                    <div class="gauge-text-container">
                        <span class="value">@data.Percentage.ToString("F1")%</span>
                    </div>
                </div>
                <div class="gauge-label">
                    @data.Title
                </div>
            </div>
            <div class="competition-info">
                <h4 class="title">@data.Label</h4>
                <p class="subtitle">@data.Description</p>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Title { get; set; } = "قدرت فروش";
    [Parameter] public int SupplierId { get; set; }
    private CompetitionData? data;
    protected override async Task OnInitializedAsync()
    {
        data = await SupplierService.GetCompetitionRatioAsync(SupplierId);
    }

    private const double ArcLength = 125.66;

    private string CalculateStrokeOffset()
    {
        var percentage = Math.Max(0, Math.Min(100, data?.Percentage ?? 0));
        var offset = ArcLength * (1 - (percentage / 100));
        return offset.ToString(CultureInfo.InvariantCulture);
    }
}
