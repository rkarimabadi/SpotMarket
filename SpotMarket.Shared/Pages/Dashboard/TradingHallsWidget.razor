
@inject IDashboardService DashboardService
<div class="widget-container">
    <div class="section-header">
        <h3 class="section-title">@Title</h3>
    </div>
    @if (_isLoading)
    {
        <div class="horizontal-scroll-container">
            @for (var i = 0; i < 4; i++)
            {
                <div class="trading-hall-card data-placeholder">
                    <BarLoader />
                </div>
            }
        </div>
    }
    else if (_hasError)
    {
        <div class="horizontal-scroll-container">
            <div class="trading-hall-card data-placeholder" style="width: 100%;">
                <HasError />
            </div>
        </div>
    }
    else if (data != null && data.Items.Any())
    {
        <div class="horizontal-scroll-container">
            @foreach (var hall in data.Items)
            {
                <div class="trading-hall-card">
                    <div class="card-header">
                        <div class="hall-icon @hall.IconBgCssClass"><i class="@hall.IconCssClass"></i></div>
                        <h4 class="hall-title">@hall.Title</h4>
                    </div>
                    <div class="card-body">
                        <div class="stat-item">
                            <span class="stat-label">@hall.ValueLabel</span>
                            <span class="stat-value">@hall.Value</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-label">نسبت فروش به عرضه</span>
                            <div class="ratio-indicator @GetRatioCssClass(hall.ChangeState)">
                                <div class="bar"></div>
                                <div class="bar"></div>
                                <div class="bar"></div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="horizontal-scroll-container">
            <div class="trading-hall-card data-placeholder" style="width: 100%;">
                <NoData />
            </div>
            <div class="trading-hall-card data-placeholder" style="width: 100%;">
                <NoData />
            </div>
            <div class="trading-hall-card data-placeholder" style="width: 100%;">
                <NoData />
            </div>
            <div class="trading-hall-card data-placeholder" style="width: 100%;">
                <NoData />
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "سلامت تالارها";
    private TradingHallsData? data;
    private bool _isLoading = false;
    private bool _hasError = false;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _hasError = false;
        try
        {
            data = await DashboardService.GetTradingHalls();
            if (data == null)
            {
                data = new TradingHallsData { Items = Enumerable.Empty<TradingHallItem>() };
            }
        }
        catch (Exception)
        {
            _hasError = true;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private string GetRatioCssClass(ValueState state)
    {
        return state switch
        {
            ValueState.Positive => "ratio-high",
            ValueState.Negative => "ratio-low",
            _ => "ratio-medium"
        };
    }
}