@inject NavigationManager NavigationManager
<div class="breadcrumb-hierarchy">
    @foreach (var item in HierarchyItems)
    {
        <span class="breadcrumb-item @(item.IsActive ? "active" : "")" style="cursor:@(item.IsActive ? "pointer" : "unset")" @onclick="() => GoTo(item)">@item.Name</span>
        @if (!item.IsLast)
        {
            <span class="breadcrumb-separator">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor"><path d="M15.707 17.707L14.293 19.121L8.172 13L14.293 6.879L15.707 8.293L11.001 13L15.707 17.707Z"></path></svg>
            </span>
        }
    }
</div>

@code {


    [Parameter]
    public List<HierarchyItem> HierarchyItems { get; set; }
    private void GoTo(HierarchyItem item)
    {
        if (item.Id > 0 && item.IsActive)
        {
            var urlName = item.Type switch
            {
                "Ring" => $"{item.Id}",
                "MainGroup" => $"{item.Id}",
                "Group" => $"{HierarchyItems.First(x => x.Type == "MainGroup").Id}/{item.Id}",
                "SubGroup" => $"{HierarchyItems.First(x => x.Type == "MainGroup").Id}/{HierarchyItems.First(x => x.Type == "Group").Id}/{item.Id}",
                "Commodity" => $"{HierarchyItems.First(x => x.Type == "MainGroup").Id}/{HierarchyItems.First(x => x.Type == "Group").Id}/{HierarchyItems.First(x => x.Type == "SubGroup").Id}/{item.Id}",
                _ => ""
            };
            NavigationManager.NavigateTo($"/markets/{urlName}");
        }
    }
}