@using System.Text.RegularExpressions

@if (Data != null && Data.Any())
{
    var keyPlayerItems = Data.Where(i => i.Title.Contains("بازیگر کلیدی")).ToList();
    var otherRankingItems = Data.Where(i => !i.Title.Contains("بازیگر کلیدی")).ToList();

    @* بخش رتبه‌بندی‌های عمومی *@
    @if (otherRankingItems.Any())
    {
        <div class="ranking-widget">
            <div class="widget-header">
                <h3 class="widget-title">@Title</h3>
            </div>
            <div class="ranking-list">
                @foreach (var item in otherRankingItems)
                {
                    <div class="ranking-item">
                        <div class="item-icon @item.ThemeCssClass">
                            <i class="@item.IconCssClass"></i>
                        </div>
                        <div class="item-info">
                            <span class="title">@item.Title</span>
                            <span class="subtitle">@item.Subtitle</span>
                        </div>
                        <div class="item-rank">
                            <span class="rank-value">@item.Rank</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    @* بخش جدید برای بازیگران کلیدی با قابلیت نمایش بیشتر/کمتر *@
    @if (keyPlayerItems.Any())
    {
        <div class="ranking-widget key-player-section">
            <div class="key-player-ranking-list">
                @foreach (var item in (_showAllKeyPlayers ? keyPlayerItems : keyPlayerItems.Take(1)))
                {
                    <div class="key-player-ranking-item">
                        <div class="item-icon @item.ThemeCssClass">
                            <i class="@item.IconCssClass"></i>
                        </div>
                        <div class="item-info">
                            <span class="title">@ExtractCommodityName(item.Title)</span>
                            <span class="subtitle">@item.Subtitle</span>
                        </div>
                        <div class="item-rank">
                            <span class="rank-value">@item.Rank</span>
                        </div>
                    </div>
                }

                @if (keyPlayerItems.Count > 1)
                {
                    <div class="show-more-container">
                        <button class="show-more-btn" @onclick="ToggleShowAllKeyPlayers">
                            @(_showAllKeyPlayers ? "نمایش کمتر" : $"نمایش رتبه عرضه کننده در کالاهای بیشتر ({keyPlayerItems.Count - 1}+)")
                        </button>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public string Title { get; set; } = "جایگاه در بازار";

    [Parameter]
    public List<RankingItem>? Data { get; set; }

    private bool _showAllKeyPlayers = false;

    private void ToggleShowAllKeyPlayers()
    {
        _showAllKeyPlayers = !_showAllKeyPlayers;
    }

    /// <summary>
    /// Extracts the commodity name from the title string.
    /// e.g., "بازیگر کلیدی در «شمش 1000p-99.8»" -> "شمش 1000p-99.8"
    /// </summary>
    private string ExtractCommodityName(string title)
    {
        var match = Regex.Match(title, @"«(.*?)»");
        return match.Success ? $"رتبه در عرضه کالای «{match.Groups[1].Value}»" : title;
    }
}