@using System.Linq
@inject IMarketsService MarketService
@inject NavigationManager NavigationManager

<div class="shortcuts-widget">
    <div class="widget-header">
        <h3 class="widget-title">@Title</h3>
        <h4 class="widget-subtitle">@Subtitle</h4>
    </div>
    @if (data != null && data.Items.Any())
    {
        <div class="shortcuts-grid">
            @if (!_isExpanded)
            {
                // حالت خلاصه: نمایش ۳ آیتم اصلی
                @foreach (var item in InitialItems)
                {
                    <div class="shortcut-tile @item.ThemeCssClass" @onclick="() => GoTo(item.Code)">
                        <div class="tile-icon"><i class="@item.IconCssClass"></i></div>
                        <span class="title">@item.Title</span>
                    </div>
                }

                // دکمه "سایر گروه‌ها" تنها در صورتی نمایش داده می‌شود که آیتم‌های بیشتری وجود داشته باشد
                @if (HasMoreItems)
                {
                    <div class="shortcut-tile" @onclick="ExpandView">
                        <div class="tile-icon"><i class="bi bi-grid-fill"></i></div>
                        <span class="title">سایر گروه‌ها</span>
                    </div>
                }
            }
            else
            {
                // حالت کامل: نمایش تمام آیتم‌ها
                @foreach (var item in data.Items)
                {
                    <div class="shortcut-tile @item.ThemeCssClass" @onclick="() => GoTo(item.Code)">
                        <div class="tile-icon"><i class="@item.IconCssClass"></i></div>
                        <span class="title">@item.Title</span>
                    </div>
                }
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public string Title { get; set; } = "میان‌برها";
    [Parameter]
    public string Subtitle { get; set; } = "بر اساس ارزش کل عرضه‌ها";
    protected override async Task OnInitializedAsync()
    {
        data = await MarketService.GetMarketShortcutsData();
    }
    private MarketShortcutsData? data;

    private bool _isExpanded = false;
    private List<MarketShortcutItem> InitialItems
    {
        get
        {
            if (data?.Items == null) return new List<MarketShortcutItem>();

            var primaryItems = data.Items.Where(i => i.ThemeCssClass != "secondary");
            var secondaryItems = data.Items.Where(i => i.ThemeCssClass == "secondary");

            return primaryItems.Concat(secondaryItems).Take(3).ToList();
        }
    }
    private List<MarketShortcutItem> PrimaryItems =>
        data?.Items.Where(i => i.ThemeCssClass != "secondary").ToList() ?? new List<MarketShortcutItem>();

    private bool HasMoreItems =>
        (data?.Items.Count ?? 0) > 3;

    private void ExpandView()
    {
        _isExpanded = true;
    }

    private void GoTo(int id)
    {
        if (id > 0)
        {
            NavigationManager.NavigateTo($"/markets/{id}");
        }
    }
}
