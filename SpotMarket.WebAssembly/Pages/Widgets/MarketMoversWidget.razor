@using SpotMarket.WebAssembly.Models.Presentation
@inject NavigationManager NavigationManager
@if (Data != null)
{
    <div class="widget-container">
        <div class="section-header">
            <h3 class="section-title">@Title</h3>
        </div>
        <div class="segmented-control">
            <button class="@(selectedMoverTab == "competition" ? "active" : "")" @onclick='() => selectedMoverTab = "competition"'>@Data.CompetitionTabTitle</button>
            <button class="@(selectedMoverTab == "demand" ? "active" : "")" @onclick='() => selectedMoverTab = "demand"'>@Data.DemandTabTitle</button>
        </div>
        <div class="data-card">
            @{
                var itemsToShow = selectedMoverTab == "competition" ? Data.CompetitionItems : Data.DemandItems;
            }
            @if (itemsToShow?.Any() == true)
            {
                foreach (var item in itemsToShow)
                {
                    <div class="data-list-item" @onclick="() => GoTo(item)">
                        <div class="item-rank">@item.Rank</div>
                        <div class="item-main-info">
                            <div class="title">@item.Title</div>
                            <div class="subtitle">@item.Subtitle</div>
                        </div>
                        <div class="item-stat-container">
                            <div class="item-value ltr @GetValueCssClass(item.ValueState)">@item.Value</div>
                            <div class="item-label">
                                @(selectedMoverTab == "competition" ? "قیمت پایه" : "موجودی")
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="p-4 text-center text-secondary">داده‌ای برای نمایش وجود ندارد.</div>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public string Title { get; set; } = "پویایی بازار";
    [Parameter]
    public MarketMoversData? Data { get; set; }

    private string selectedMoverTab = "competition";

    private string GetValueCssClass(ValueState state)
    {
        return state switch
        {
            ValueState.Positive => "positive",
            ValueState.Negative => "negative",
            _ => "neutral"
        };
    }
    private void GoTo(MarketMoverItem item)
    {
        if (item.CommodityId > 0)
        {
            NavigationManager.NavigateTo($"/commodity-tree/commodities/{item.CommodityId}");
        }
    }
}
